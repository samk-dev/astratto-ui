:root {
  --au-container-max-width: var(--au-global-width);
  --au-container-xsmall-width: var(--au-global-width-xsmall);
  --au-container-small-width: var(--au-global-width-small);
  --au-container-medium-width: var(--au-global-width-medium);
  --au-container-large-width: var(--au-global-width-large);
  --au-container-xlarge-width: var(--au-global-width-xlarge);

  --au-container-padding-horizontal: 0.9375rem;
  --au-container-padding-horizontal-s: var(--au-global-gutter-default);
  --au-container-padding-horizontal-m: var(--au-global-gutter-medium);
}
/*
 * 1. Box sizing has to be `content-box` so the max-width is always the same and
 *    unaffected by the padding on different breakpoints. It's important for the size modifiers.
 */

.uk-container {
  display: flow-root;
  /* 1 */
  box-sizing: content-box;
  max-width: var(--au-container-max-width);
  margin-left: auto;
  margin-right: auto;
  padding-left: var(--au-container-padding-horizontal);
  padding-right: var(--au-container-padding-horizontal);
}

/* Phone landscape and bigger */
@media (min-width: $breakpoint-small) {
  .uk-container {
    padding-left: var(--au-container-padding-horizontal-s);
    padding-right: var(--au-container-padding-horizontal-s);
  }
}

/* Tablet landscape and bigger */
@media (min-width: $breakpoint-medium) {
  .uk-container {
    padding-left: var(--au-container-padding-horizontal-m);
    padding-right: var(--au-container-padding-horizontal-m);
  }
}

/*
 * Remove margin from the last-child
 */

.uk-container > :last-child {
  margin-bottom: 0;
}

/*
 * Remove padding from nested containers
 */

.uk-container .uk-container {
  padding-left: 0;
  padding-right: 0;
}

/* Size modifier
 ========================================================================== */

.uk-container-xsmall {
  max-width: var(--au-container-xsmall-width);
}

.uk-container-small {
  max-width: var(--au-container-small-width);
}

.uk-container-large {
  max-width: var(--au-container-large-width);
}

.uk-container-xlarge {
  max-width: var(--au-container-xlarge-width);
}

.uk-container-expand {
  max-width: none;
}

/* Expand modifier
 ========================================================================== */

/*
 * Expand one side only
 */

.uk-container-expand-left {
  margin-left: 0;
}
.uk-container-expand-right {
  margin-right: 0;
}

/* Phone landscape and bigger */
@media (min-width: $breakpoint-small) {
  .uk-container-expand-left.uk-container-xsmall,
  .uk-container-expand-right.uk-container-xsmall {
    max-width: unquote(
      'calc(50% + calc(var(--au-container-xsmall-width) / 2) - var(--au-container-padding-horizontal-s))'
    );
  }

  .uk-container-expand-left.uk-container-small,
  .uk-container-expand-right.uk-container-small {
    max-width: unquote(
      'calc(50% + calc(var(--au-container-small-width) / 2) - #{var(--au-container-padding-horizontal-s)})'
    );
  }
}

/* Tablet landscape and bigger */
@media (min-width: $breakpoint-medium) {
  .uk-container-expand-left,
  .uk-container-expand-right {
    max-width: unquote(
      'calc(50% + calc(var(--au-container-max-width) / 2) - var(--au-container-padding-horizontal-m))'
    );
  }

  .uk-container-expand-left.uk-container-xsmall,
  .uk-container-expand-right.uk-container-xsmall {
    max-width: unquote(
      'calc(50% + calc(var(--au-container-xsmall-width) / 2) - var(--au-container-padding-horizontal-m))'
    );
  }

  .uk-container-expand-left.uk-container-small,
  .uk-container-expand-right.uk-container-small {
    max-width: unquote(
      'calc(50% + calc(var(--au-container-small-width) / 2) - var(--au-container-padding-horizontal-m))'
    );
  }

  .uk-container-expand-left.uk-container-large,
  .uk-container-expand-right.uk-container-large {
    max-width: unquote(
      'calc(50% + calc(var(--au-container-large-width) / 2) - var(--au-container-padding-horizontal-m))'
    );
  }

  .uk-container-expand-left.uk-container-xlarge,
  .uk-container-expand-right.uk-container-xlarge {
    max-width: unquote(
      'calc(50% + calc(var(--au-container-xlarge-width) / 2) - var(--au-container-padding-horizontal-m))'
    );
  }
}

/* Item
 ========================================================================== */

/*
 * Utility classes to reset container padding on the left or right side
 * Note: It has to be negative margin on the item, because it's specific to the item.
 */

.uk-container-item-padding-remove-left,
.uk-container-item-padding-remove-right {
  width: unquote('calc(100% + var(--au-container-padding-horizontal))');
}

.uk-container-item-padding-remove-left {
  margin-left: (-var(--au-container-padding-horizontal));
}
.uk-container-item-padding-remove-right {
  margin-right: (-var(--au-container-padding-horizontal));
}

/* Phone landscape and bigger */
@media (min-width: $breakpoint-small) {
  .uk-container-item-padding-remove-left,
  .uk-container-item-padding-remove-right {
    width: unquote('calc(100% + var(--au-container-padding-horizontal-s))');
  }

  .uk-container-item-padding-remove-left {
    margin-left: (-var(--au-container-padding-horizontal-s));
  }
  .uk-container-item-padding-remove-right {
    margin-right: (-var(--au-container-padding-horizontal-s));
  }
}

/* Tablet landscape and bigger */
@media (min-width: $breakpoint-medium) {
  .uk-container-item-padding-remove-left,
  .uk-container-item-padding-remove-right {
    width: unquote('calc(100% + #{var(--au-container-padding-horizontal-m)})');
  }

  .uk-container-item-padding-remove-left {
    margin-left: (-var(--au-container-padding-horizontal-m));
  }
  .uk-container-item-padding-remove-right {
    margin-right: (-var(--au-container-padding-horizontal-m));
  }
}

// Hooks
// ========================================================================

@if (mixin-exists(hook-container-misc)) {
  @include hook-container-misc();
}

// @mixin hook-container-misc(){}
